// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`schema should match snapshot 1`] = `
"
	\\"\\"\\"
	A drug monograph
	\\"\\"\\"
	type BnfDrug implements Node @dontInfer {
		\\"The SID for the drug e.g. _694410247\\"
		sid: String!

		\\"The title for the drug. May include HTML markup. E.g. anti-D (Rh0) immunoglobulin has a subscript 0\\"
		title: String!

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The review date, if available for this record.\\"
		reviewDate: Date @dateformat

		\\"The interactant with the same sid as this drug, if it exists, otherwise null\\"
		interactant: BnfInteractant @link(by: \\"sid\\", from: \\"sid\\")

		\\"The constituent drugs. This will be populated if the drug is a combination (e.g. 'tramadol with paracetamol') where each constituent exists in the BNF as a monograph in its own right.\\"
		constituentDrugs: BnfConstituentDrugs
	}

	\\"\\"\\"
	A wrapper for the constituent drugs of a combination drug.
	\\"\\"\\"
	type BnfConstituentDrugs {
		\\"The standard message to be included with the constituent drugs.\\"
		message: String!

		\\"The constituents of the combination drug. TODO: Make this non-nullable when the feed is fixed (currently it shows constituents that aren't themselves drug monographs)\\"
		constituents: [BnfDrug]! @link(by: \\"sid\\")
	}


	\\"\\"\\"
	An interactant
	\\"\\"\\"
	type BnfInteractant implements Node @dontInfer {
		\\"The SID for the Interactant e.g. _694410247 which may, or may not, match the sid of a drug\\"
		sid: String!

		drug: BnfDrug @link(by: \\"sid\\", from: \\"sid\\")

		\\"The title for the interactant. May include HTML markup. E.g. anti-D (Rh0) immunoglobulin has a subscript 0\\"
		title: String!

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")
	}


	\\"\\"\\"
	A simple record that just contains a list of sections.
	For example, treatment summaries, about and guidance records, interactions introduction, etc.
	\\"\\"\\"
	interface BnfSimpleRecord @dontInfer {
		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}


	\\"\\"\\"
	A section of a simple record.
	\\"\\"\\"
	type BnfRecordSection @dontInfer {
		order: Int!

		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The content for the section. May contain HTML markup. \\"
		content: String! @html
	}


	type BnfAboutSection implements Node & BnfSimpleRecord @dontInfer {
		order: Int!

		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}


	type BnfTreatmentSummary implements Node & BnfSimpleRecord @dontInfer {
		order: Int!

		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}


	type BnfGuidance implements Node & BnfSimpleRecord @dontInfer {
		order: Int!

		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}


	type BnfCautionaryAndAdvisoryGuidance implements Node & BnfSimpleRecord @dontInfer {
		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}


	type BnfCautionaryAndAdvisoryLabel implements Node @dontInfer {
		number: Int!

		\\"A description of the label. May contain HTML mark-up. \\"
		description: String!

		\\"The label recommendation in English.\\"
		englishRecommendation: String!

		\\"The Welsh translation of the label recommendation.\\"
		welshRecommendation: String!
	}


	type BnfDentalPractitionersFormulary implements Node & BnfSimpleRecord @dontInfer {
		\\"The title of the section. May contain HTML markup.\\"
		title: String!

		\\"The review date of the record, formatted into a string.\\"
		reviewDate: String

		\\"The slugified and lowercased title, used as a URL path\\"
		slug: String! @slug(field: \\"title\\")

		\\"The sections of the record.\\"
		sections: [BnfRecordSection!]!
	}
"
`;
